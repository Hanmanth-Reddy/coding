CA, 


=================== Generate CSR( Certificate Signing request) =============================================

#Method1:
Step 1) To create privateKey
openssl genrsa -out yourdomain.key 2048

To verify PrivateKey content
openssl rsa -text -in yourdomain.key -noout

Step 2) Create CSR using existing PrivateKey 
openssl req -new -key yourdomain.pem -out my_csr.csr

# Method2:
openssl req -new -newkey rsa:2048 -nodes -keyout domain.key -out domain.csr

# Method3:
openssl req -new -newkey rsa:2048 -nodes -keyout domain.key -out domain.csr   \
-subj "/C=US/ST=California/L=SanJose/O=AI Systems Inc./OU=IT/CN=example.aisystems.com/emailAddress=hanmanth.scm@gmail.com"


openssl req -new -newkey rsa:2048 -nodes -keyout ElasticCloudEnterprise.key -out ElasticCloudEnterprise.csr   \
-subj "/C=US/ST=California/L=San Jose/O=Cisco Systems Inc./OU=M1788009/CN=*.ece-alln.cisco.com"    \
-addext "subjectAltName=DNS:ece.cisco.com,DNS:*.ece.cisco.com,DNS:ece-alln.cisco.com,DNS:*.ece-alln.cisco.com" \


=================== To verify CSR information =============================================
openssl req -text -in domain.csr -noout -verify


=================== command to connect server using client and get some info  ===========================
openssl s_client -connect domain.com:443 < /dev/null
openssl s_client -connect domain.com:443 -showcerts < /dev/null
openssl s_client -connect techtarget.com:443 -tlsextdebug -msg   // To check for Heartbleed Vulnerability
openssl s_client -connect example.com:443 -cert client_cert.pem -key client_key.pem  // specify client cert 

//To check whether server supports specific TLS version
openssl s_client -connect example.com:443 -ssl3
openssl s_client -connect example.com:443 -tls1
openssl s_client -connect example.com:443 -tls1_1
openssl s_client -connect example.com:443 -tls1_2

openssl s_client -connect techtarget.com:443 < /dev/null | openssl x509 -text -noout


============================ X509 =================================================
openssl x509 -in certificate.crt -text -noout
openssl x509 -outform der -in certificate.pem -out certificate.der
openssl x509 -inform der -in certificate.der -out certificate.pem

openssl x509 -in certificate.crt -noout -dates
openssl x509 -in certificate.crt -noout -fingerprint
openssl x509 -in certificate.crt -noout -serial


openssl verify -CAfile ca.crt certificate.crt

openssl x509 -in certificate.crt -pubkey -noout > public_key.pem //Extact publich key from Digitalcert

================================= TO generate privateKey ======================================
openssl genrsa -out private.key 2048
openssl genpkey -algorithm RSA -out private.key
